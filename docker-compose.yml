version: '3.7'

services:
  manager:
    build:
      context: ./src/task_manager
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWD: ${MONGO_PASSWORD}
      MONGO_ADDR: ${MONGO_ADDRESS}
      MONGO_DB_NAME: ${MONGO_DB_NAME}

      DEV_MODE: ${DEV_MODE}
    restart: always
    networks:
      - app_net    

  loader:
    build:
      context: ./src/load_and_group
      dockerfile: Dockerfile
    hostname: loader
    volumes:
      - /etc/localtime:/etc/localtime/:ro
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWD: ${MONGO_PASSWORD}
      MONGO_ADDR: ${MONGO_ADDRESS}
      MONGO_DB_NAME: ${MONGO_DB_NAME}

      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      KAFKA_TOPIC: ${KAFKA_TOPIC_FOR_GROUPED_DATA}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

      DEV_MODE: ${DEV_MODE}
      RAW_DATA_FOLDER: ${RAW_DATA_FOLDER}
      SFTP_SCRIPTS_FOLDER_PATH: ${SFTP_SCRIPTS_FOLDER_PATH}
    restart: always
    networks:
      - app_net

  predictor:
    build:
      context: ./src/predict_generator
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
    environment:
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      KAFKA_TOPIC_TO_LISTEN: ${KAFKA_TOPIC_FOR_GROUPED_DATA}
      KAFKA_TOPIC_TO_WRITE: ${KAFKA_TOPIC_FOR_PREDICTIONS}
      KAFKA_GROUPED_DATA_GROUP: ${KAFKA_GROUPED_DATA_GROUP}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWD: ${MONGO_PASSWORD}
      MONGO_ADDR: ${MONGO_ADDRESS}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_TASKS_COLLECTION: ${MONGO_TASKS_COLLECTION}

      MODELS_DIR: ${MODELS_DIR}
      
      DEV_MODE: ${DEV_MODE}
    restart: always
    networks:
      - app_net

  emitter:
    build:
      context: ./src/event_emitter
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
    environment:
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      KAFKA_TOPIC_TO_LISTEN: ${KAFKA_TOPIC_FOR_PREDICTIONS}
      KAFKA_GROUP: ${KAFKA_PREDICTIONS_GROUP}
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}

      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWD: ${MONGO_PASSWORD}
      MONGO_ADDR: ${MONGO_ADDRESS}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_TASKS_COLLECTION: ${MONGO_TASKS_COLLECTION}
      MONGO_EMIT_LOGS_COLLECTION: ${MONGO_EMIT_LOGS_COLLECTION}

      MODELS_DIR: ${MODELS_DIR}
      
      DEV_MODE: ${DEV_MODE}
    restart: always
    networks:
      - app_net

  server:
     build:
       context: ./src/nginx
       dockerfile: Dockerfile
     volumes:
       - /etc/localtime:/etc/localtime/:ro
     ports:
       - ${FRONT_PORT}:80
     networks:
       - app_net
     depends_on:
       - backend
     restart: always

networks:
  app_net:
    driver: bridge
